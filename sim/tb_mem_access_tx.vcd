$date
  Mon Feb  8 15:53:17 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module riscv_32i $end
$upscope $end
$scope module helpers $end
$upscope $end
$scope module tb_helpers $end
$upscope $end
$scope module assembler $end
$upscope $end
$scope module tb_mem_access_tx $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 32 # inst_in[31:0] $end
$var reg 32 $ inst_out[31:0] $end
$var reg 32 % rs1_in[31:0] $end
$var reg 32 & rs2_in[31:0] $end
$var reg 1 ' rw $end
$var reg 32 ( data_store[31:0] $end
$var reg 32 ) address_out[31:0] $end
$var reg 2 * mem_len[1:0] $end
$var reg 1 + tbclock $end
$var reg 1 , tbsimended $end
$scope module dut $end
$var reg 1 - clk $end
$var reg 1 . rst $end
$var reg 32 / inst_in[31:0] $end
$var reg 32 0 inst_out[31:0] $end
$var reg 32 1 rs1_in[31:0] $end
$var reg 32 2 rs2_in[31:0] $end
$var reg 1 3 rw $end
$var reg 32 4 data_store[31:0] $end
$var reg 32 5 address_out[31:0] $end
$var reg 2 6 mem_len[1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
0"
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
0'
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00 *
0+
0,
0-
0.
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
03
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00 6
#100000000
1"
1.
#200000000
b00000010101100000000000000000011 #
b00000010101100000000000000000011 /
#500000000
1!
b00000010101100000000000000000011 $
b00000000000000000000000000101011 )
1+
1-
b00000010101100000000000000000011 0
b00000000000000000000000000101011 5
#1000000000
0!
0+
0-
#1200000000
b00000000000100000001000000000011 #
b10000000000000000000000000000000 %
b00000000000100000001000000000011 /
b10000000000000000000000000000000 1
#1500000000
1!
b00000000000100000001000000000011 $
b10000000000000000000000000000001 )
b01 *
1+
1-
b00000000000100000001000000000011 0
b10000000000000000000000000000001 5
b01 6
#2000000000
0!
0+
0-
#2200000000
b11111111111000000010000000000011 #
b00000000000000000000000001100100 %
b11111111111000000010000000000011 /
b00000000000000000000000001100100 1
#2500000000
1!
b11111111111000000010000000000011 $
b00000000000000000000000001100010 )
b11 *
1+
1-
b11111111111000000010000000000011 0
b00000000000000000000000001100010 5
b11 6
#3000000000
0!
0+
0-
#3200000000
b00000000000000000000001000100011 #
b00000000000000010011001101100101 &
b00000000000000000000001000100011 /
b00000000000000010011001101100101 2
#3500000000
1!
b00000000000000000000001000100011 $
1'
b00000000000000010011001101100101 (
b00000000000000000000000001101000 )
b00 *
1+
1-
b00000000000000000000001000100011 0
13
b00000000000000010011001101100101 4
b00000000000000000000000001101000 5
b00 6
#4000000000
0!
0+
0-
#4200000000
b11111110000000000001111100100011 #
b11111110000000000001111100100011 /
#4500000000
1!
b11111110000000000001111100100011 $
b00000000000000000000000001100010 )
b01 *
1+
1-
b11111110000000000001111100100011 0
b00000000000000000000000001100010 5
b01 6
#5000000000
0!
0+
0-
#5200000000
b00000000000000000010000000100011 #
b00000000000000000010000000100011 /
#5500000000
1!
b00000000000000000010000000100011 $
b00000000000000000000000001100100 )
b11 *
1+
1-
b00000000000000000010000000100011 0
b00000000000000000000000001100100 5
b11 6
#6000000000
0!
0+
0-
#6200000000
b00000000000000000000001011101111 #
b00000000000000000000001011101111 /
#6500000000
1!
b00000000000000000000001011101111 $
0'
1+
1-
b00000000000000000000001011101111 0
03
#7000000000
0!
0+
0-
#7200000000
#7500000000
1!
1+
1-
#8000000000
0!
0+
0-
#8200000000
#8500000000
1!
1+
1-
#9000000000
0!
0+
0-
#9200000000
1,
